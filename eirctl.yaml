# yaml-language-server: $schema=schemas/schema_v1.json

debug: false
output: prefixed
# TODO: top level variables are not being munged in
# variables:
#   foo: 1

import:
  - shared/build/go/eirctl.yaml

pipelines:
  build:binary:
    - task: clean
    - task: build
      depends_on:
        - clean
      variables:
        RepoOwner: Ensono
        BinName: eirctl

tasks:
  build:
    context: go1x
    description: Builds Go binary
    command:
      - |
        mkdir -p .deps
        ldflags="-s -w -X \"github.com/{{.RepoOwner}}/{{.BinName}}/cmd/eirctl.Version={{.Version}}\" -X \"github.com/{{.RepoOwner}}/{{.BinName}}/cmd/eirctl.Revision={{.Revision}}\" -extldflags -static"
        GOPATH=$PWD/.deps GOOS=${BUILD_GOOS} GOARCH=${BUILD_GOARCH} CGO_ENABLED=0 go build -mod=readonly -buildvcs=false -ldflags="$ldflags" -o bin/{{.BinName}}-${BUILD_GOOS}-${BUILD_GOARCH}${BINARY_SUFFIX} cmd/main.go
    variations:
      - BUILD_GOOS: windows
        BUILD_GOARCH: amd64
        BINARY_SUFFIX: .exe
      - BUILD_GOOS: windows
        BUILD_GOARCH: "386"
        BINARY_SUFFIX: .exe
      - BUILD_GOOS: windows
        BUILD_GOARCH: arm64
        BINARY_SUFFIX: .exe
      - BUILD_GOOS: darwin
        BUILD_GOARCH: amd64
        BINARY_SUFFIX: ""
      - BUILD_GOOS: darwin
        BUILD_GOARCH: arm64
        BINARY_SUFFIX: ""
      - BUILD_GOOS: linux
        BUILD_GOARCH: arm64
        BINARY_SUFFIX: ""
      - BUILD_GOOS: linux
        BUILD_GOARCH: amd64
        BINARY_SUFFIX: ""
    variables:
      RepoOwner: Ensono
      BinName: eirctl

  build:container:
    description: Builds the docker image
    command: docker build --build-arg Version={{.Version}} --build-arg Revision={{.Revision}} -t eirctl:{{.Version}} .

  goreleaser:
    command:
      - goreleaser --debug --rm-dist

  gofmt:
    context: go1x
    command:
      - go fmt ./...
      - gofmt -l **/*.go
      # - gofmt -l -cpuprofile .pprof  **/*.go

  schema_gen_deps:
    description: |
      Installing dependencies for the struct type generation
    command:
      - pnpm install -g quicktype

  generate_own_schema:
    description: |
      Generates the schema for a eirctl itself.

      Exits in CI if changes detected.
    command:
      - go run tools/schemagenerator/main.go
      - |
        if [ ! -z "$(git status --porcelain --untracked-files=no)" ]; then
          if [ ! -z ${CI+x} ] ; then
            echo "In CI with an unclean tree - exiting"
            echo "Info: make sure you have generatedschema and committed"
            exit 1
          fi
        fi

  generate_ci_structs_from_schema:
    description: |
      Type generation for target CI definitions used by the generate command
      CI Definitions will be used by generate-def command.
    command:
      - mkdir -p ./internal/z_generated/github
      - quicktype --lang go --src-lang schema --src ./internal/schema/sources/sources/github.json -o internal/z_generated/github/schema.go --field-tags yaml \
        --just-types-and-package --omit-empty --package githubworkflow &2>1
      - go fmt ./internal/z_generated/github
      - mkdir -p ./internal/z_generated/gitlab
      - quicktype --lang go --src-lang schema --src ./internal/schema/sources/sources/gitlab.json -o internal/z_generated/gitlab/schema.go --field-tags yaml \
        --just-types-and-package --omit-empty --package gitlab &2>1
      - go fmt ./internal/z_generated/gitlab
      - quicktype --lang go --src-lang schema --src ./internal/schema/sources/bitbucket.json -o internal/schema/bitbucket.go --field-tags yaml --just-types-and-package --omit-empty --package schema
      - go fmt internal/schema/bitbucket.go
    # variations:
    #   # - CI_TARGET: github
    #   #   SCHEMA: ./internal/z_generated/schema/sources/github.json
    #   - CI_TARGET: gitlab
    #     SCHEMA: ./internal/z_generated/schema/sources/gitlab.json # https://gitlab.com/gitlab-org/gitlab/-/raw/master/app/assets/javascripts/editor/schema/ci.json

  show_docs:
    command:
      - go install golang.org/x/tools/cmd/godoc@latest
      - open http://localhost:6060/pkg/github.com/Ensono/eirctl/?m=all
      - godoc -notes "BUG|TODO" -play -http=:6060

  tidy:
    name: "tidy me up"
    command:
      - go mod tidy
